public class LeasingCost {
    
    public static Vehicle[] createAllVehicles(String filename) {
        StdIn.setFile(filename);

        int numberOfCars = Integer.parseInt( StdIn.readLine() );
        Vehicle[] vehicles = new Vehicle[numberOfCars];

        for ( int i = 0; i < numberOfCars; i++ ) {
            String line = StdIn.readLine();
            vehicles[i] = createVehicle(line);
        }
        return vehicles;
    }

    public static double computeCO2(double numberOfMonth, double usage, double mileageAllowance, double co2PerUnit ){
        double miles = numberOfMonth * mileageAllowance ;
        return miles/usage*co2PerUnit;
    }

    public static double computeFuelCost(double numberOfMonth, double usage, double mileageAllowance, double fuelPrice){
        double miles = numberOfMonth * mileageAllowance;
        double cost = miles/usage * fuelPrice;
        return cost;
    }

    /* 
     calculates the cost of lease
     */
    public static double computeLeaseCost(double dueAtSigning, int numberOfMonths, double monthlyCost){
        
        return dueAtSigning + numberOfMonths*monthlyCost;
    }

    //creates and returns an Vehicle object with name, Lease, and Fuel properly populated based on the given string
     
    public static Vehicle createVehicle(String description){
        String name=getname("name:", description);

        String fuelType=getname("type:", description);
        Fuel fuel;
        if(fuelType.equals("gas")){
            Double usage=Double.parseDouble(getname("mile/unit:", description));
            fuel=new Fuel(usage);
        } else{
            Double usage=Double.parseDouble(getname("mile/unit:", description));
            Double charger=Double.parseDouble(getname("charger:", description));
            fuel=new Fuel(usage,charger);
        }

        double dueAtSigning=Double.parseDouble(getname("due:", description));
        int leaseLength=Integer.parseInt(getname("length:", description));
        double monthlyCost=Double.parseDouble(getname("monthly:", description));
        int mileageAllowance=Integer.parseInt(getname("allowance:", description));
        Lease lease=new Lease(dueAtSigning, leaseLength, monthlyCost, mileageAllowance);

        Vehicle newCar=new Vehicle(name, fuel, lease);
        return newCar;
    }
    public static String getname(String s, String description){
        String str=description.substring(description.indexOf(s)+String.valueOf(s).length(),description.indexOf(';',description.indexOf(s)));
        return str;
    }

    /* 
     * Description: The method calculates and assign CO2Emission, FuelCost, leastCost, of each vehicle.
     */
    public static void computeCO2EmissionsAndCost( Vehicle[] vehicles, double gasPrice, double electricityPrice ){
        for (Vehicle vehicle : vehicles){
            int numberOfMonth=vehicle.getLease().getLeaseLength();
            double usage=vehicle.getFuel().getUsage();
            double mileageAllowance=vehicle.getLease().getMileageAllowance();
            double co2PerUnit;
            if (vehicle.getFuel().getType() == 1){
                co2PerUnit=vehicle.getFuel().CO2EMITTED_GASCOMBUSTION;
            }else{
                co2PerUnit=vehicle.getFuel().CO2EMITTED_ELECTRICITYCOMBUSTION;
            }
            double dueAtSigning=vehicle.getLease().getDueAtSigning();
            double monthlyCost=vehicle.getLease().getMonthlyCost();
            double fuelPrice;
            if (vehicle.getFuel().getType()==1){
                fuelPrice=gasPrice;
            }else{
                fuelPrice=electricityPrice;
            }
            double charger=0;
            if (vehicle.getFuel().getType()==2){
                charger=vehicle.getFuel().getCharger();
            }

            vehicle.setCO2Emission(computeCO2(numberOfMonth, usage, mileageAllowance, co2PerUnit));
            vehicle.setFuelCost(computeFuelCost(numberOfMonth, usage, mileageAllowance, fuelPrice));
            vehicle.setTotalCost(computeLeaseCost(dueAtSigning, numberOfMonth, monthlyCost) + computeFuelCost(numberOfMonth, usage, mileageAllowance, fuelPrice) + charger);
        }
        
        }

    public static void main (String[] args) {
        String filename         = args[0];
        double gasPrice         = Double.parseDouble( args[1] );
        double electricityPrice = Double.parseDouble( args[2] );

        Vehicle[] vehicles = createAllVehicles(filename); 
        computeCO2EmissionsAndCost(vehicles, gasPrice, electricityPrice);

        for ( Vehicle v : vehicles ) 
            System.out.println(v.toString());
    }
}
